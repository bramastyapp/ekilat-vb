<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>